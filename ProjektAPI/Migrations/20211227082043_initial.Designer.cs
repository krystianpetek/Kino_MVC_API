// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektAPI.Models;

namespace ProjektAPI.Migrations
{
    [DbContext(typeof(APIDatabaseContext))]
    [Migration("20211227082043_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektAPI.Models.FilmModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<string>("CzasTrwania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gatunek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("OgraniczeniaWiek")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Filmy");
                });

            modelBuilder.Entity("ProjektAPI.Models.KlientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KodPocztowy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miasto")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumerTelefonu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UzytkownikId")
                        .IsUnique();

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("ProjektAPI.Models.RezerwacjeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GodzinaEmisji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFilm")
                        .HasColumnType("int");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdSaleKinowe")
                        .HasColumnType("int");

                    b.Property<int?>("KlienciId")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaPorzadkowa")
                        .HasColumnType("int");

                    b.Property<int>("Miejsce")
                        .HasColumnType("int");

                    b.Property<int>("Rzad")
                        .HasColumnType("int");

                    b.Property<int?>("SaleKinoweId")
                        .HasColumnType("int");

                    b.Property<bool>("Zajete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FilmyId");

                    b.HasIndex("KlienciId");

                    b.HasIndex("SaleKinoweId");

                    b.ToTable("Rezerwacja");
                });

            modelBuilder.Entity("ProjektAPI.Models.SalaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IloscMiejsc")
                        .HasColumnType("int");

                    b.Property<int>("IloscRzedow")
                        .HasColumnType("int");

                    b.Property<string>("NazwaSali")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NazwaSali")
                        .IsUnique();

                    b.ToTable("SaleKinowe");
                });

            modelBuilder.Entity("ProjektAPI.Models.UzytkownikModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RodzajUzytkownika")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Login");
                });

            modelBuilder.Entity("ProjektAPI.Models.KlientModel", b =>
                {
                    b.HasOne("ProjektAPI.Models.UzytkownikModel", "Uzytkownik")
                        .WithOne("Klient")
                        .HasForeignKey("ProjektAPI.Models.KlientModel", "UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("ProjektAPI.Models.RezerwacjeModel", b =>
                {
                    b.HasOne("ProjektAPI.Models.FilmModel", "Filmy")
                        .WithMany()
                        .HasForeignKey("FilmyId");

                    b.HasOne("ProjektAPI.Models.KlientModel", "Klienci")
                        .WithMany()
                        .HasForeignKey("KlienciId");

                    b.HasOne("ProjektAPI.Models.SalaModel", "SaleKinowe")
                        .WithMany()
                        .HasForeignKey("SaleKinoweId");

                    b.Navigation("Filmy");

                    b.Navigation("Klienci");

                    b.Navigation("SaleKinowe");
                });

            modelBuilder.Entity("ProjektAPI.Models.UzytkownikModel", b =>
                {
                    b.Navigation("Klient");
                });
#pragma warning restore 612, 618
        }
    }
}
